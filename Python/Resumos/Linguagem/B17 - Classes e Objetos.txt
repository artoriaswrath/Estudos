Classes e objetos

Classes são propriedades usadas para criar objetos. 
Quase tudo em python são objetos, com suas propriedades e métodos. 

Classes são criadas usando a palavra-chave class: 
Ex: Criando uma classe com uma propriedade chamada de x. 
class Minhaclasse: 
   x = 5

Essa classe criada pode ser usada para criar um objeto: 
p1 = Minhaclasse() 
E então imprimir o valor da propriedade x:
print(p1.x) 

Todas as classes tem uma função chamada _init_(), que é sempre executada quando a classe é iniciada. 

_init_ é usada para assinalar valores para propriedades de objetos, assim como outras operações necessárias quando um objeto é criado. 
Ex:  Criar uma classe nomeada "Pessoa" e usando a função _init_() para assinalar valores para nome e idade

class Pessoa: 
   def _init_(self, name, age): 
      self.nome = nome
      self.idade = idade 

p1 = Pessoa("John, 36)
print(p1.nome)
print(p1.idade)
Retorno: 
John
36

Objetos também pode conter métodos, que são funções que pertencem a eles.
Ex: Inserindo uma função que imprime uma saudação
class Pessoa: 
   def _init_(self, name, age): 
      self.nome = nome
      self.idade = idade 

   def minhafuncao(self)
      print("Olá meu nome é " + self.name)

p1 = Pessoa("John, 36) 
p1.minhafuncao()
Retorno: 
Olá meu nome é John

O parâmetro self é usado para acessar variáveis que pertencem á classe, não precisa ser chamado de self, entretanto, deve ser o primeiro parâmetro de qualquer função na classe. 

É possível modificar as propriedades do objeto: 
Ex: mudando a idade para 40
p1.idade = 40 

É possível também, deletar propriedades de objetos usando a palavra-chave del: 
Ex: 
del p1.idade 

Assim como deletar o objeto inteiro: 
del p1 

Se uma classe estiver vazia, use a palavra-chave pass para evitar um erro: 
class Person: 
   pass