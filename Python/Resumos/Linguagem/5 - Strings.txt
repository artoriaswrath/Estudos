String 

Definição de string: 
Em programação e em linguagens formais, uma cadeia de caracteres é uma sequência ordenada de caracteres escolhidos a partir de um conjunto pré-determinado. Em programação, cada símbolo armazenado na memória é representado por um valor numérico. Uma variável declarada com tipo de dado cadeia geralmente armazena um número pré-determinado de caracteres.

Em python, string são escritos entre aspas simples ou aspas duplas. 

É possível atribuir string a uma variável da seguinte forma: 
a = 'hello' ou a="hello" 

Assim como string multilinhas usando três aspas simples ou três aspas duplas: 
Ex: 
a = """Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."""

ou 

Ex: 
a = '''Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua.'''

Se o texto entre aspas triplas não estiver associado a uma variável, ele é considerado comentário e é ignorado pelo interpretador.

String é um arranjo. 
Quando uma string é associada a uma variável, é criado um array na memória em que cada elemento do array é um caractere. 

Exemplo: 
a = "Hello"
Esse string corresponde ao seguinte arranjo: 
a[0] = "H"
a[1] = "e"
a[2] = "l"
a[3] = "l" 
a[4] = "o" 
a[-1] = "o"
a[-2] = "l" 
a[-3] = "l" 
a[-4] = "e" 
a[-5] = "h"
Portanto, print (a[1] retorna "e" 

É possível programar uma saída de dados para multiplos elementos do array, ou seja, apenas uma determinada parte do texto. 
Exemplo: 
a = hello 
print(a[0:3]  retorna hell
Isso contando da esquerda para a direita. 

Usar valores negativos faz com que a posição seja contada da direita para esquerda, com exceção do 0, que continua sendo o primeiro elemento do array. 
Ex: 
a = hello 
print(a[0:-3] retorna He
O valor de fechamento se tornou a terceira letra contando da direita pra esquerda. 
Se o intervalo final for maior que o número de caracteres da string, o print retorna a string inteira.

Para saber o número de caracteres da spring, pode-se usar a função len()
Ex: 
a = "Hello" 
print(len(a))


Existe também a possibilidade de checar se um determinado texto está dentro da string. 
Para tal, usa-se as palavras-chave "in" ou "not in" 
Ex: 
txt = "Hello" 
x = "ell" in txt
print (x) retorna o valor lógico "true" 


Duas strings podem ser combinadas da seguinte forma: 
a = "Hello" 
b = "World" 
c = a + b 
print(c) retorna HelloWorld 

a = "Hello" 
b = "World" 
c = a + " " + b
print(c) retorna Hello World

Você não pode combinar uma variável de texto com uma variável de número. 
Mas o método format() pode fazer isso usando placeholders
Ex: 
quantity = 3
itemno = 567
price = 49.95
myorder = "I want {} pieces of item {} for {} dollars."
print(myorder.format(quantity, itemno, price)) retorna I want 3 pieces of item 567 for 49.95 

É possível usar números de índice para assegurar que os argumentos estão nos lugares corretos. 
Ex: {2}, {0}, {1} 
O número é a ordem ao citar no método format(), lembrando que o primeiro da ordem tem índice 0.

Note que é impossível usar aspas dentro de aspas em python, para conseguir fazer isso deve-se usar o caractere de escape \ na frente do "